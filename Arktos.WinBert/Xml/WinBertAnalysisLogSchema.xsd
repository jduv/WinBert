<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="WinBertAnalysisLog"
    targetNamespace="http://arktos.org/WinBertAnalysisLogSchema.xsd"
    elementFormDefault="qualified"
    xmlns="http://arktos.org/WinBertAnalysisLogSchema.xsd"
    xmlns:ba="http://arktos.org/WinBertAnalysisLogSchema.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
    <xs:complexType name="MethodCall">
        <xs:annotation>
            <xs:documentation>
                Defines an element that is used to represent a method call site. This call site can be static, isntance or constructor.
                If the method call type is instance, then the &gt;PostCallInstance&lt; element should contain a dump of the object the method
                was called on <i>post</i> call.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="PostCallInstance" type="ba:Object" maxOccurs="1" />
            <xs:element name="ReturnValue" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:choice>
                            <xs:element name="Object" type="ba:Object" />
                        </xs:choice>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="Id" type="xs:int" use="required"/>
        <xs:attribute name="Signature" type="xs:string" use="required"/>
        <xs:attribute name="Type" type="ba:MethodCallType" use="required" />
    </xs:complexType>

    <xs:simpleType name="MethodCallType">
        <xs:annotation>
            <xs:documentation>
                An enumeration representing method call types.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Instance" />
            <xs:enumeration value="Static" />
            <xs:enumeration value="Ctor" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="Field">
        <xs:annotation>
            <xs:documentation>
                Represents a field on a reference or value type.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Value" type="ba:Value" />
        </xs:sequence>
        <xs:attribute name="Name" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="Property">
        <xs:annotation>
            <xs:documentation>
                Represents a property on a reference or value type.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Value" type="ba:Value" />
        </xs:sequence>
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="BackingFieldName" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="Value">
        <xs:annotation>
            <xs:documentation>
                This basic type represents a container for an object or a primitive. This will primarily be used when
                representing the actual raw data inside fields or structs--which can be either nested objects or 
                primitive types.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice>
                <xs:element name="Object" type="ba:Object" />
                <xs:element name="Primitive" type="ba:Primitive" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Object">
        <xs:annotation>
            <xs:documentation>
                Represents an object. This base type allows a basic roll up of some other representations. It serves as a base
                for all reference and value types.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Fields" type="ba:Field" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="Properties" type="ba:Property" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Type" type="xs:string" use="required"/>
    </xs:complexType>
    
    <xs:complexType name="Primitive">
        <xs:annotation>
            <xs:documentation>
                Represents a primitive type, such as int or long.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="Type" type="xs:string" use="required" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Null">
        <xs:annotation>
            <xs:documentation>
                Represents a null object.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ba:Object" />
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="NotNull">
        <xs:annotation>
            <xs:documentation>
                Represents a non-null object. Expect this when the maximum depth of the object dumping algorithm
                has been reached. 
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ba:Object"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="This">
        <xs:annotation>
            <xs:documentation>
                Represents a pointer to the current object. This is relevant mainly to just fields that point back to the
                enclosing object, and is useful for preventing uneeded recursion during object logging. A field with 
                this value should be considered to have the exact same value as it's direct parent object.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ba:Object"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="WinBertAnalysisLog">
        <xs:annotation>
            <xs:documentation>
                A log of method calls.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="MethodCall" type="ba:MethodCall" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="MaxDepth" type="xs:int" use="required" />
    </xs:complexType>

    <xs:element name="WinBertAnalysisLog" type="ba:WinBertAnalysisLog"></xs:element>
</xs:schema>
